http://graphics.stanford.edu/software/lightpack/

stanford 1996, include source code. But the light field resolution is really low.

http://spams-devel.gforge.inria.fr/index.html

Sparse coding and dictionary learning, include source code.



Dynamically Reparameterized Light Fields

http://groups.csail.mit.edu/graphics/pubs/thesis_isaksen.pdf


A Compressive Light Field Projection System


http://web.media.mit.edu/~gordonw/CompressiveLightFieldProjector/


Tensor Displays:
Compressive Light Field Synthesis using Multilayer Displays with Directional Backlighting

http://web.media.mit.edu/~gordonw/TensorDisplays/

Least Squares Regression

http://statweb.stanford.edu/~tibs/ElemStatLearn/printings/ESLII_print10.pdf

Gram-Schmidt

http://cns.bu.edu/%7Emvss/courses/cn700/CN700-Lec3.pdf

https://en.wikipedia.org/wiki/QR_decomposition

inpainting color images in learned dictionary

sparse learned representations for image restoration

/// by 'inpainting color images in learned dictionary'
/// M = I + gamma / n * K
/// I is 3n-by-3n identity
/// gamma = 5.25
/// n is num pixels in a patch
/// K is 3n-by-3n diagonal by three n-by-n ones
/// y should be (R,G,B)^t of 3n length
/// y^t * M to get average color of signal
    DenseMatrix<float> * m_average;
    
m_average = new DenseMatrix<float>(m, m);
	m_average->setZero();
	int i, j;
	const int m3 = m / 3; 
	int lo, hi;
	for(j=0;j<m;j++) {
	    lo = (j / m3) * m3; 
	    hi = lo + m3;
	    for(i=lo;i<hi;i++) {
	        m_average->column(j)[i] = 5.25 / m3;
	    }
	}
	m_average->addDiagonal(1.0);
	
http://ukoethe.github.io/vigra/doc/vigra/regression_8hxx_source.html

