/*
 *  proxyPaintFuncs.mel
 *
 *  misc funcs
 *
 */
 
global proc string proxyPaint_getCurrentViz()
{
    pickWalk -d down;
    string $sel[] = `ls -sl -type proxyViz`;
    if(size($sel) < 1) {
        return "";
    }
    
    return $sel[0];
}

global proc string proxyPaintGetExmpName(string $stats[],
                    int $minInd, int $maxInd)
{
    int $i;
    for($i=$minInd;$i<$maxInd;$i++) {
        if($stats[$i]==".name") {
            return  $stats[$i+1];  
        }
    }
    return "unknown";
}

global proc int proxyPaintGetExmpBoolStat(string $stats[],
                    string $skey,
                    int $minInd, int $maxInd)
{
    int $i;
    for($i=$minInd;$i<$maxInd;$i++) {
        if($stats[$i]==$skey) {
            if($stats[$i+1] == "on") {
                return 1;
            } else {
                return 0;   
            }
        }
    }
    return 0;
}

global proc string proxyPaintGetExmpIntStat(string $stats[],
                    string $skey,
                    int $minInd, int $maxInd)
{
    int $i;
    for($i=$minInd;$i<$maxInd;$i++) {
        if($stats[$i]==$skey) {
            return $stats[$i+1];
        }
    }
    return "1";
}

global proc string proxyPaintGetExmpVec3Stat(string $stats[],
                    string $skey,
                    int $minInd, int $maxInd)
{
    int $i;
    for($i=$minInd;$i<$maxInd;$i++) {
        if($stats[$i]==$skey) {
            return $stats[$i+1];
        }
    }
    return "0 0 0";
}

global proc proxyPaintOnActiveExampleChanges()
{
    proxyPaintToolContext -e -aex `currentCtx`;
}

global proc string[] proxyPaintGetExampleStats()
{
    string $exmpStat = eval("proxyPaintToolContext -q -exs "+`currentCtx`);
    string $buffer[];
    $numTokens = `tokenize $exmpStat "/" $buffer`;
    return $buffer;
}
 
global proc proxyPaintSetShoVox()
{
    float $val = `floatSliderGrp -q -value proxyPaintSlider_ShoVoxThre`;
	proxyPaintToolContext -e -shv $val `currentCtx`;
}

global proc proxyPaintSetBrushFalloff(float $val)
{
	proxyPaintToolContext -e -bfo $val `currentCtx`;
}

global proc proxyPaintShowNumSamples()
{
    int $sampleCount = eval("proxyPaintToolContext -q -spc " + `currentCtx`);
	intField -e -v $sampleCount proxyPaintFld_sampleCount;
}
 
global proc proxyPaintSetFilterPortion(float $val)
{
	proxyPaintToolContext -e -filterPortion $val `currentCtx`;
	proxyPaintShowNumSamples();
}

global proc proxyPaintSetOpt(int $val)
{
	proxyPaintToolContext -e -opt $val `currentCtx`;
}

global proc proxyPaintSetMultiCreate(int $val)
{
	proxyPaintToolContext -e -mct $val `currentCtx`;
}

global proc proxyPaintSetInstanceGroupCount(int $val)
{
    proxyPaintToolContext -e -igc $val `currentCtx`;
}

global proc proxyPaintSetBRadius(float $val)
{
	proxyPaintToolContext -e -brd $val `currentCtx`;
}

global proc proxyPaintSetMinMargin(float $val)
{
	proxyPaintToolContext -e -mng $val `currentCtx`;
}

global proc proxyPaintSetMaxMargin(float $val)
{
	proxyPaintToolContext -e -mxg $val `currentCtx`;
}

global proc proxyPaintSetBWeight(float $val)
{
	proxyPaintToolContext -e -bwt $val `currentCtx`;
}

global proc proxyPaintSetScaleMin(float $val)
{
	proxyPaintToolContext -e -smn $val `currentCtx`;
}

global proc proxyPaintSetScaleMax(float $val)
{
	proxyPaintToolContext -e -smx $val `currentCtx`;
}

global proc proxyPaintSetRotateNoise(float $val)
{
	proxyPaintToolContext -e -rno $val `currentCtx`;
}

global proc proxyPaintSetZenithNoise(float $val)
{
	proxyPaintToolContext -e -zno $val `currentCtx`;
}

global proc proxyPaintSetALN(int $val)
{
    proxyPaintToolContext -e -anl $val `currentCtx`;
}

global proc proxyPaintSetCull(int $val)
{
    proxyPaintToolContext -e -cus $val `currentCtx`;
}

global proc proxyPaintDoSnap()
{
    proxyPaintToolContext -e -opt 101 `currentCtx`;
}

global proc proxyPaintSetStickToGround(int $val)
{ proxyPaintToolContext -e -stg $val `currentCtx`; }

global proc proxyPaintSetNoise3dLevel(float $x)
{ 
    proxyPaintToolContext -e -nlv $x `currentCtx`; 
    proxyPaintShowNumSamples();
}

global proc proxyPaintSetNoise3dFrequency(float $x)
{ 
    proxyPaintToolContext -e -nfr $x `currentCtx`; 
    proxyPaintShowNumSamples();
}

global proc proxyPaintSetNoise3dLacunarity(float $x)
{ 
    proxyPaintToolContext -e -nlc $x `currentCtx`;
    proxyPaintShowNumSamples();
}

global proc proxyPaintSetNoise3dOctave(int $x)
{ 
    proxyPaintToolContext -e -nov $x `currentCtx`; 
    proxyPaintShowNumSamples();
}

global proc proxyPaintSetNoise3dGain(float $x)
{ 
    proxyPaintToolContext -e -ngn $x `currentCtx`; 
    proxyPaintShowNumSamples();
}

global proc proxyPaintSetShoVizGrid(int $x)
{
    proxyPaintToolContext -e -vvg $x `currentCtx`; 
}

global proc proxyPaintSetNoise3dOrigin()
{
    float $a = `rand 1`;
    float $b = `rand 1`;
    float $c = `rand 1`;
    floatFieldGrp -e
    -value1 $a -value2 $b -value3 $c
    proxyPaintField_noise3dOrigin;
    proxyPaintToolContext -e -noiseOriginVec $a $b $c `currentCtx`;
    proxyPaintShowNumSamples();
}

global proc proxyPaint_openFileAsImageSampler()
{
    string $filenm = `fileDialog -m 0 -dm "*.exr"`;
    if(size($filenm) < 1) {
        print("proxyPaint_openFileAsImageSampler aborted");
        return;   
    }
    proxyPaintToolContext -e -msp $filenm `currentCtx`;
}

global proc proxyPaintTextField_setSampleFileName()
{
    string $filenm = `textFieldGrp -q -text proxyPaintTextField_samplerFileName`;
    proxyPaintToolContext -e -msp $filenm `currentCtx`;
}

global proc proxyPaintReset()
{
    if(`confirmDialog -title "Reset Confirmation" -message "Are you sure you want to reset current Viz and discard all unsaved changes?"
    -button "Yes" -button "No" -defaultButton "No"
    -cancelButton "No" -dismissString "No"` == "No")
        return;
    proxyPaintToolContext -e -opt 99 `currentCtx`;
}

proc string proxyPaint_getCurrentCache()
{
    string $node = proxyPaint_getCurrentViz();
    if($node == "")
        return "";
    
    string $ch = `getAttr ($node + ".cachePath")`;
    return $ch;
}

global proc proxyPaintDoSelectSampleByView()
{
    proxyPaintToolContext -e -vsp `currentCtx`;
    proxyPaintShowNumSamples();
}

global proc proxyPaintDoFlood()
{
    proxyPaintToolContext -e -opt 100 `currentCtx`;
}

global proc proxyPaintChooseCache()
{
    string $cache[] = `fileDialog2 -fileFilter "*.sct;;*.*"`;
    textFieldGrp -e -text $cache[0] proxyPaintSlider_cacheField;
    
    proxyPaintSetCache();
}

global proc proxyPaintSetCache()
{
    string $node = proxyPaint_getCurrentViz();
    if($node == "")
        return;
    
    setAttr -type "string" ($node + ".cachePath") `textFieldGrp -q -text proxyPaintSlider_cacheField`;
}

global proc proxyPaintWriteCache()
{
    string $filename = `textFieldGrp -q -text proxyPaintSlider_cacheField`;
    if($filename == "")
        return;
    if(`confirmDialog -title "Override Confirmation" -message ("Are you sure you want to write current proxy to file \n" + $filename + " ?")
    -button "Yes" -button "No" -defaultButton "No"
    -cancelButton "No" -dismissString "No"` == "No")
        return;
    proxyPaintToolContext -e -wch $filename `currentCtx`;
}

global proc proxyPaintReadCache()
{
    string $filename = `textFieldGrp -q -text proxyPaintSlider_cacheField`;
    if($filename == "")
        return;
    
    proxyPaintToolContext -e -rch $filename `currentCtx`;
}

global proc proxyPaint_updateVizStats(string $toolName)
{
    string $names = eval("proxyPaintToolContext -q -vst " + $toolName);
    if(size($names) < 3) {
        return;   
    }
    
    string $buffer[];
    $numTokens = `tokenize $names "|" $buffer`;
    
    int $i;
    for($i=0;$i<$numTokens;$i=$i+1) {
        if($buffer[$i] == "box") {
            textFieldGrp -e -text $buffer[$i+1] ppnField_vizStatBox; 
        }
        if($buffer[$i] == "instance") {
            textFieldGrp -e -text $buffer[$i+1] ppnField_vizStatInstance; 
        }
        if($buffer[$i] == "cell") {
            textFieldGrp -e -text $buffer[$i+1] ppnField_vizStatCell; 
        }
        if($buffer[$i] == "bound") {
            textFieldGrp -e -text $buffer[$i+1] ppnField_vizStatBound; 
        }
        if($buffer[$i] == "triangle") {
            textFieldGrp -e -text $buffer[$i+1] ppnField_vizStatTriangle; 
        }
    }
    
    iconTextButton -e -image "generic_amber_light.xpm" 
        proxyPaintIcon_editVizGroung;
        
    int $veg = eval("proxyPaintToolContext -q -veg " + `currentCtx`);
    if($veg == 0) {
        iconTextButton -e -image "generic_red_light.xpm" 
            proxyPaintIcon_editVizGroung;
    } else {
        iconTextButton -e -image "generic_green_light.xpm" 
            proxyPaintIcon_editVizGroung;
    }
    
    float $fval = eval("proxyPaintToolContext -q -shv " + $toolName);
 	floatSliderGrp -e -value $fval proxyPaintSlider_ShoVoxThre;
    
}

global proc proxyPaintSetEditVizGround()
{
    iconTextButton -e -image "generic_amber_light.xpm" 
        proxyPaintIcon_editVizGroung;
      
    int $veg = eval("proxyPaintToolContext -q -veg " + `currentCtx`);
    
    if($veg < 0) {
        iconTextButton -e -image "generic_red_light.xpm" 
            proxyPaintIcon_editVizGroung;
        return;
    }
    
    if($veg == 0) {
        proxyPaintToolContext -e -veg 1 `currentCtx`;
        iconTextButton -e -image "generic_green_light.xpm" 
            proxyPaintIcon_editVizGroung;
    } else {
        proxyPaintToolContext -e -veg 0 `currentCtx`;
        iconTextButton -e -image "generic_red_light.xpm" 
            proxyPaintIcon_editVizGroung;
    }
    
}

global proc string proxyPaintGetSampleMeshColor(string $shape)
{
    string $scv = "0.25 0.5 0.35";
    if (`attributeExists "pxpnColor" $shape`) {
        float $col[] = `getAttr ($shape + ".pxpnColor")`;
        $scv = $col[0];
        
$scv = $scv + " " + $col[1] + " " + $col[2];
    } else {
        string $cmd = "addAttr -ln \"pxpnColor\" -at double3 "+$shape;
        eval($cmd);
        $cmd = "addAttr -ln \"pxpnColorR\" -at double -p pxpnColor "+$shape;
        eval($cmd);
        $cmd = "addAttr -ln \"pxpnColorG\" -at double -p pxpnColor "+$shape;
        eval($cmd);
        $cmd = "addAttr -ln \"pxpnColorB\" -at double -p pxpnColor "+$shape;
        eval($cmd);
        $cmd = "setAttr -type double3 "+$shape+".pxpnColor "+$scv;
        eval($cmd);
    }
    return $scv;
}

global proc proxyPaintSetSampleMeshColor(string $com)
{
    string $shape = `colorSliderGrp -q -ann $com`;
    float $col[] = `colorSliderGrp -q -rgb $com`;
    string $cmd = "setAttr -type double3 \""+$shape+".pxpnColor\" "+$col[0]+" "+$col[1]+" "+$col[2];
    eval($cmd);
}

global proc string proxyPaintGetSampleMeshImage(string $shape)
{
    string $scv = "none";
    if (`attributeExists "pxpnImage" $shape`) {
        $scv = `getAttr ($shape + ".pxpnImage")`;
    } else {
        string $cmd = "addAttr -ln \"pxpnImage\"  -dt \"string\" "+$shape;
        eval($cmd);
        $cmd = "setAttr -type \"string\" "+$shape+".pxpnImage \""+$scv+"\"";
        eval($cmd);
    }
    return $scv;
}

global proc proxyPaintSetSampleMeshImage(string $com)
{
    string $image = `fileDialog -m 0 -dm "*.exr"`;
    if(size($image) < 1) {
        print("proxyPaintSetSampleMeshImage aborted");
        return;   
    }
    
    string $shape = `textField -q -ann $com`;
    string $cmd = "setAttr -type \"string\" "+$shape+".pxpnImage \""+$image+"\"";
    eval($cmd);
    textField -e -text $image $com;
}

global proc proxyPaintSetSampleMeshImage2(string $com)
{
    string $image = `textField -q -text $com`;
    if(size($image) < 5) {
        $image = "none";   
    }
    
    string $shape = `textField -q -ann $com`;
    string $cmd = "setAttr -type \"string\" "+$shape+".pxpnImage \""+$image+"\"";
    eval($cmd);
    textField -e -text $image $com;
}

global proc proxyPaint_createExample()
{
    if ( (`window -exists proxyPaint_CreateExampleNote`) == true ) {
        deleteUI proxyPaint_CreateExampleNote;
    }
    
    window -title ("Creare/Edit Example on Selected Mesh")  -wh 480 320 proxyPaint_CreateExampleNote;
	
    string $form = `formLayout -numberOfDivisions 100`;
    string $bline = `columnLayout -adjustableColumn true`;
    string $scroll = `scrollLayout -p $form -cr on`;
    
    columnLayout -adjustableColumn true -p $scroll 
        pxpnSampleMeshUICol2c69e36a;
	
	setParent..;
	rowColumnLayout -numberOfColumns 3 -p $bline;
	button -l "Create/Edit Example" -c "proxyPaintTool -vxl";
	button -l "Reload Selected" -c "proxyPaint_createExample";
	button -l "Close" -c "deleteUI proxyPaint_CreateExampleNote";
	setParent..;
	
	formLayout -edit
        -attachNone  $bline     "top"
        -attachForm     $bline     "left"   2
        -attachForm    $bline     "bottom" 2
        -attachForm     $bline     "right"  2

        -attachForm     $scroll "top"    2
        -attachForm    $scroll "left"   2
        -attachControl    $scroll "bottom" 2 $bline
        -attachForm     $scroll "right"  2
    $form;
    
    proxyPaintCreateSampleMeshUI("pxpnSampleMeshUICol2c69e36a");
    
    showWindow proxyPaint_CreateExampleNote;

}

global proc proxyPaint_EditVizGround()
{
    string $transName = `text -q -label proxyPaint_vizNameText`;
    string $vizName = `text -q -ann proxyPaint_vizNameText`;
    if($vizName == "No Viz Selected") {
        print("\n no viz selected");
        return;   
    }
    
    if ( (`window -exists proxyPaint_EditGroundNote`) == true ) {
        deleteUI proxyPaint_EditGroundNote;
    }
    
    window -title ("Setup Ground Mesh")  -wh 480 320 proxyPaint_EditGroundNote;
	
    string $form = `formLayout -numberOfDivisions 100`;
    string $bline = `columnLayout -adjustableColumn true`;
    string $scroll = `scrollLayout -p $form -cr on`;
    
    columnLayout -adjustableColumn true -p $scroll;
        
        textFieldGrp -label "Viz Name" 
            -text $transName -ed 0;
               
        string $cmd = "proxyPaintConnectGroundMesh(\"" + $vizName + "\")"; 
            
        iconTextButton -label "Connect Selected Mesh" 
            -image "generic_add.xpm" 
            -style "iconAndTextHorizontal" 
            -c $cmd;
            
        rowColumnLayout -numberOfColumns 4
            -cw 1 32
            -cw 2 300
            -cw 3 32
            -cw 4 50
            pxpnGroundUIGroundRowd454bda;
	
	setParent..;
	rowColumnLayout -numberOfColumns 3 
	    -cw 1 200 
	    -p $bline;
	button -l "Close" -c "deleteUI proxyPaint_EditGroundNote";
	setParent..;
	
	formLayout -edit
        -attachNone  $bline     "top"
        -attachForm     $bline     "left"   2
        -attachForm    $bline     "bottom" 2
        -attachForm     $bline     "right"  2

        -attachForm     $scroll "top"    2
        -attachForm    $scroll "left"   2
        -attachControl    $scroll "bottom" 2 $bline
        -attachForm     $scroll "right"  2
    $form;
    
    proxyPaintCreateEditGroundUI($vizName, "pxpnGroundUIGroundRowd454bda");
    
    showWindow proxyPaint_EditGroundNote;
    
}

proc proxyPaintCheckSelectViz(string $vizName)
{
    string $sels[] = `ls -sl`;
    int $nsel = size($sels);
    int $i;
    int $isVizSelected = 0;
    
    for($i=0; $i<$nsel; $i++) {
        string $vizs[] = `listRelatives -ad -type locator $sels[$i]`;
        
        if(stringArrayContains($vizName, $vizs) == 1 ) {
            
            $isVizSelected = 1;
            break;   
        }
    }
    
    if($isVizSelected == 0) {
        select -tgl $vizName;
    }
}

global proc proxyPaintConnectGroundMesh(string $vizName)
{
    proxyPaintCheckSelectViz($vizName);
    eval("proxyPaintTool -cgm");
    evalDeferred("proxyPaint_EditVizGround");
}

global proc string proxyPaintGetAttrNodeName(string $attrName)
{
    string $array[] = stringToStringArray($attrName, ".");
    return $array[0];
}

global proc proxyPaintReplaceGroundMesh(string $vizName, int $ind)
{
    string $sels[] = `ls -type transform -sl`;
    if(size($sels) < 1) {
        print("\n no transform selected, cannot replace");
        return;
    }
    string $mesh[] = `listRelatives -ad -type mesh $sels[0]`;
    if(size($mesh) < 1) {
        print("\n no mesh selected, cannot replace");
        return;
    }
    proxyPaintCheckSelectViz($vizName);
    eval("proxyPaintTool -rgm "+$ind);
    evalDeferred("proxyPaint_EditVizGround");
}

global proc proxyPaintSelGroundCheckedChnaged(string $chk)
{
    string $trans = `checkBox -q -ann $chk`;
    int $stat = `checkBox -q -v $chk`;
    if($stat == 1) {
        select -r $trans;
    } else {
        select -d $trans;
    }
}

global proc proxyPaint_saveCache()
{
    string $sctFilter = "*.sct";
    string $filenm = `fileDialog -m 1 -dm $sctFilter`;
    if(size($filenm) < 1) {
        print("proxyPaint_saveCache aborted");
        return;   
    }
    int $r = `proxyPaintTool -scf $filenm`;
    if($r==1) {
        confirmDialog -title "Success" 
            -message ("Saved to cache file "+$filenm);
    } else {
        confirmDialog -title "Failure" 
            -message ("Cannot save to cache file "+$filenm);
    }
}

global proc proxyPaint_loadCache()
{
    string $sctFilter = "*.sct";
    string $filenm = `fileDialog -m 0 -dm $sctFilter`;
    if(size($filenm) < 1) {
        print("proxyPaint_loadCache aborted");
        return;   
    }
    int $r = `proxyPaintTool -lcf $filenm`;
    if($r==1) {
        confirmDialog -title "Success" 
            -message ("Loaded cache file "+$filenm);
    } else {
        confirmDialog -title "Failure" 
            -message ("Cannot load cache file "+$filenm);
    }
}

proc proxyPaint_showParentTransform(string $name)
{
    print("\n proxyPaint show transform "+$name);
    string $par = firstParentOf($name);
    if($par != "") {
        string $attrName = $par + ".visibility";
        if(`getAttr $attrName` == 0) {
            setAttr $attrName 1;
            proxyPaint_showParentTransform($par);
        }
    }
}

proc proxyPaint_showAViz(string $name)
{
    print("\n proxyPaint show viz "+$name);
    proxyPaint_showParentTransform($name);
}

global proc proxyPaint_showAllVizs()
{
    string $shapes[] = `ls -type proxyViz`;
    string $ashape;
    for($ashape in $shapes) {
        proxyPaint_showAViz($ashape);
    }
}

